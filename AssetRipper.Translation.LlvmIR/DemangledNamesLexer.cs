//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from e:/repos/AssetRipper.Translation.LlvmIR/AssetRipper.Translation.LlvmIR/DemangledNames.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace AssetRipper.Translation.LlvmIR {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class DemangledNamesLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, EscapedString=8, 
		Bool=9, CDecl=10, CLRCall=11, Char=12, Class=13, Const=14, DeclTypeAuto=15, 
		Enum=16, FastCall=17, Float=18, Int=19, Int64=20, Long=21, Short=22, Signed=23, 
		Static=24, StdCall=25, Struct=26, ThisCall=27, Union=28, Unsigned=29, 
		VectorCall=30, Virtual=31, Void=32, LeftParen=33, RightParen=34, Less=35, 
		Greater=36, Equals=37, Plus=38, Minus=39, Star=40, Slash=41, Modulo=42, 
		And=43, Pipe=44, Caret=45, Tilde=46, Exclamation=47, Colon=48, Comma=49, 
		BackTick=50, SingleQuote=51, DoubleQuote=52, LeftBrace=53, RightBrace=54, 
		LeftBracket=55, RightBracket=56, Identifier=57, Number=58, Whitespace=59, 
		Newline=60;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "EscapedString", 
		"Bool", "CDecl", "CLRCall", "Char", "Class", "Const", "DeclTypeAuto", 
		"Enum", "FastCall", "Float", "Int", "Int64", "Long", "Short", "Signed", 
		"Static", "StdCall", "Struct", "ThisCall", "Union", "Unsigned", "VectorCall", 
		"Virtual", "Void", "LeftParen", "RightParen", "Less", "Greater", "Equals", 
		"Plus", "Minus", "Star", "Slash", "Modulo", "And", "Pipe", "Caret", "Tilde", 
		"Exclamation", "Colon", "Comma", "BackTick", "SingleQuote", "DoubleQuote", 
		"LeftBrace", "RightBrace", "LeftBracket", "RightBracket", "Identifier", 
		"Number", "IdentifierNondigit", "Nondigit", "Digit", "NonZeroDigit", "UniversalCharacterName", 
		"HexQuad", "HexadecimalDigit", "Whitespace", "Newline"
	};


	public DemangledNamesLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public DemangledNamesLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'_Static'", "'public'", "'protected'", "'private'", "'operator'", 
		"'new'", "'delete'", null, "'bool'", "'__cdecl'", "'__clrcall'", "'char'", 
		"'class'", "'const'", "'decltype(auto)'", "'enum'", "'__fastcall'", "'float'", 
		"'int'", "'__int64'", "'long'", "'short'", "'signed'", "'static'", "'__stdcall'", 
		"'struct'", "'__thiscall'", "'union'", "'unsigned'", "'__vectorcall'", 
		"'virtual'", "'void'", "'('", "')'", "'<'", "'>'", "'='", "'+'", "'-'", 
		"'*'", "'/'", "'%'", "'&'", "'|'", "'^'", "'~'", "'!'", "':'", "','", 
		"'`'", "'''", "'\"'", "'{'", "'}'", "'['", "']'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, "EscapedString", "Bool", 
		"CDecl", "CLRCall", "Char", "Class", "Const", "DeclTypeAuto", "Enum", 
		"FastCall", "Float", "Int", "Int64", "Long", "Short", "Signed", "Static", 
		"StdCall", "Struct", "ThisCall", "Union", "Unsigned", "VectorCall", "Virtual", 
		"Void", "LeftParen", "RightParen", "Less", "Greater", "Equals", "Plus", 
		"Minus", "Star", "Slash", "Modulo", "And", "Pipe", "Caret", "Tilde", "Exclamation", 
		"Colon", "Comma", "BackTick", "SingleQuote", "DoubleQuote", "LeftBrace", 
		"RightBrace", "LeftBracket", "RightBracket", "Identifier", "Number", "Whitespace", 
		"Newline"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "DemangledNames.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static DemangledNamesLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,60,491,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,
		1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,
		3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,
		1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,5,7,191,8,7,10,7,12,7,194,
		9,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,
		10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,
		12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,
		14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,
		15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,
		16,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,
		19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,
		21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,
		23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,
		25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,
		26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,
		28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,
		29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,
		31,1,32,1,32,1,33,1,33,1,34,1,34,1,35,1,35,1,36,1,36,1,37,1,37,1,38,1,
		38,1,39,1,39,1,40,1,40,1,41,1,41,1,42,1,42,1,43,1,43,1,44,1,44,1,45,1,
		45,1,46,1,46,1,47,1,47,1,48,1,48,1,49,1,49,1,50,1,50,1,51,1,51,1,52,1,
		52,1,53,1,53,1,54,1,54,1,55,1,55,1,56,1,56,1,56,5,56,432,8,56,10,56,12,
		56,435,9,56,1,57,1,57,5,57,439,8,57,10,57,12,57,442,9,57,1,57,3,57,445,
		8,57,1,58,1,58,3,58,449,8,58,1,59,1,59,1,60,1,60,1,61,1,61,1,62,1,62,1,
		62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,3,62,467,8,62,1,63,1,63,1,63,1,63,
		1,63,1,64,1,64,1,65,4,65,477,8,65,11,65,12,65,478,1,65,1,65,1,66,1,66,
		3,66,485,8,66,1,66,3,66,488,8,66,1,66,1,66,0,0,67,1,1,3,2,5,3,7,4,9,5,
		11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,
		18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,
		30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,
		42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,
		107,54,109,55,111,56,113,57,115,58,117,0,119,0,121,0,123,0,125,0,127,0,
		129,0,131,59,133,60,1,0,6,1,0,39,39,3,0,65,90,95,95,97,122,1,0,48,57,1,
		0,49,57,3,0,48,57,65,70,97,102,2,0,9,9,32,32,493,0,1,1,0,0,0,0,3,1,0,0,
		0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,
		0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,
		0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,
		1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,
		0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,
		1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,
		0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,
		1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,
		0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,
		103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,
		113,1,0,0,0,0,115,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,1,135,1,0,0,0,3,
		143,1,0,0,0,5,150,1,0,0,0,7,160,1,0,0,0,9,168,1,0,0,0,11,177,1,0,0,0,13,
		181,1,0,0,0,15,188,1,0,0,0,17,197,1,0,0,0,19,202,1,0,0,0,21,210,1,0,0,
		0,23,220,1,0,0,0,25,225,1,0,0,0,27,231,1,0,0,0,29,237,1,0,0,0,31,252,1,
		0,0,0,33,257,1,0,0,0,35,268,1,0,0,0,37,274,1,0,0,0,39,278,1,0,0,0,41,286,
		1,0,0,0,43,291,1,0,0,0,45,297,1,0,0,0,47,304,1,0,0,0,49,311,1,0,0,0,51,
		321,1,0,0,0,53,328,1,0,0,0,55,339,1,0,0,0,57,345,1,0,0,0,59,354,1,0,0,
		0,61,367,1,0,0,0,63,375,1,0,0,0,65,380,1,0,0,0,67,382,1,0,0,0,69,384,1,
		0,0,0,71,386,1,0,0,0,73,388,1,0,0,0,75,390,1,0,0,0,77,392,1,0,0,0,79,394,
		1,0,0,0,81,396,1,0,0,0,83,398,1,0,0,0,85,400,1,0,0,0,87,402,1,0,0,0,89,
		404,1,0,0,0,91,406,1,0,0,0,93,408,1,0,0,0,95,410,1,0,0,0,97,412,1,0,0,
		0,99,414,1,0,0,0,101,416,1,0,0,0,103,418,1,0,0,0,105,420,1,0,0,0,107,422,
		1,0,0,0,109,424,1,0,0,0,111,426,1,0,0,0,113,428,1,0,0,0,115,444,1,0,0,
		0,117,448,1,0,0,0,119,450,1,0,0,0,121,452,1,0,0,0,123,454,1,0,0,0,125,
		466,1,0,0,0,127,468,1,0,0,0,129,473,1,0,0,0,131,476,1,0,0,0,133,487,1,
		0,0,0,135,136,5,95,0,0,136,137,5,83,0,0,137,138,5,116,0,0,138,139,5,97,
		0,0,139,140,5,116,0,0,140,141,5,105,0,0,141,142,5,99,0,0,142,2,1,0,0,0,
		143,144,5,112,0,0,144,145,5,117,0,0,145,146,5,98,0,0,146,147,5,108,0,0,
		147,148,5,105,0,0,148,149,5,99,0,0,149,4,1,0,0,0,150,151,5,112,0,0,151,
		152,5,114,0,0,152,153,5,111,0,0,153,154,5,116,0,0,154,155,5,101,0,0,155,
		156,5,99,0,0,156,157,5,116,0,0,157,158,5,101,0,0,158,159,5,100,0,0,159,
		6,1,0,0,0,160,161,5,112,0,0,161,162,5,114,0,0,162,163,5,105,0,0,163,164,
		5,118,0,0,164,165,5,97,0,0,165,166,5,116,0,0,166,167,5,101,0,0,167,8,1,
		0,0,0,168,169,5,111,0,0,169,170,5,112,0,0,170,171,5,101,0,0,171,172,5,
		114,0,0,172,173,5,97,0,0,173,174,5,116,0,0,174,175,5,111,0,0,175,176,5,
		114,0,0,176,10,1,0,0,0,177,178,5,110,0,0,178,179,5,101,0,0,179,180,5,119,
		0,0,180,12,1,0,0,0,181,182,5,100,0,0,182,183,5,101,0,0,183,184,5,108,0,
		0,184,185,5,101,0,0,185,186,5,116,0,0,186,187,5,101,0,0,187,14,1,0,0,0,
		188,192,5,96,0,0,189,191,8,0,0,0,190,189,1,0,0,0,191,194,1,0,0,0,192,190,
		1,0,0,0,192,193,1,0,0,0,193,195,1,0,0,0,194,192,1,0,0,0,195,196,5,39,0,
		0,196,16,1,0,0,0,197,198,5,98,0,0,198,199,5,111,0,0,199,200,5,111,0,0,
		200,201,5,108,0,0,201,18,1,0,0,0,202,203,5,95,0,0,203,204,5,95,0,0,204,
		205,5,99,0,0,205,206,5,100,0,0,206,207,5,101,0,0,207,208,5,99,0,0,208,
		209,5,108,0,0,209,20,1,0,0,0,210,211,5,95,0,0,211,212,5,95,0,0,212,213,
		5,99,0,0,213,214,5,108,0,0,214,215,5,114,0,0,215,216,5,99,0,0,216,217,
		5,97,0,0,217,218,5,108,0,0,218,219,5,108,0,0,219,22,1,0,0,0,220,221,5,
		99,0,0,221,222,5,104,0,0,222,223,5,97,0,0,223,224,5,114,0,0,224,24,1,0,
		0,0,225,226,5,99,0,0,226,227,5,108,0,0,227,228,5,97,0,0,228,229,5,115,
		0,0,229,230,5,115,0,0,230,26,1,0,0,0,231,232,5,99,0,0,232,233,5,111,0,
		0,233,234,5,110,0,0,234,235,5,115,0,0,235,236,5,116,0,0,236,28,1,0,0,0,
		237,238,5,100,0,0,238,239,5,101,0,0,239,240,5,99,0,0,240,241,5,108,0,0,
		241,242,5,116,0,0,242,243,5,121,0,0,243,244,5,112,0,0,244,245,5,101,0,
		0,245,246,5,40,0,0,246,247,5,97,0,0,247,248,5,117,0,0,248,249,5,116,0,
		0,249,250,5,111,0,0,250,251,5,41,0,0,251,30,1,0,0,0,252,253,5,101,0,0,
		253,254,5,110,0,0,254,255,5,117,0,0,255,256,5,109,0,0,256,32,1,0,0,0,257,
		258,5,95,0,0,258,259,5,95,0,0,259,260,5,102,0,0,260,261,5,97,0,0,261,262,
		5,115,0,0,262,263,5,116,0,0,263,264,5,99,0,0,264,265,5,97,0,0,265,266,
		5,108,0,0,266,267,5,108,0,0,267,34,1,0,0,0,268,269,5,102,0,0,269,270,5,
		108,0,0,270,271,5,111,0,0,271,272,5,97,0,0,272,273,5,116,0,0,273,36,1,
		0,0,0,274,275,5,105,0,0,275,276,5,110,0,0,276,277,5,116,0,0,277,38,1,0,
		0,0,278,279,5,95,0,0,279,280,5,95,0,0,280,281,5,105,0,0,281,282,5,110,
		0,0,282,283,5,116,0,0,283,284,5,54,0,0,284,285,5,52,0,0,285,40,1,0,0,0,
		286,287,5,108,0,0,287,288,5,111,0,0,288,289,5,110,0,0,289,290,5,103,0,
		0,290,42,1,0,0,0,291,292,5,115,0,0,292,293,5,104,0,0,293,294,5,111,0,0,
		294,295,5,114,0,0,295,296,5,116,0,0,296,44,1,0,0,0,297,298,5,115,0,0,298,
		299,5,105,0,0,299,300,5,103,0,0,300,301,5,110,0,0,301,302,5,101,0,0,302,
		303,5,100,0,0,303,46,1,0,0,0,304,305,5,115,0,0,305,306,5,116,0,0,306,307,
		5,97,0,0,307,308,5,116,0,0,308,309,5,105,0,0,309,310,5,99,0,0,310,48,1,
		0,0,0,311,312,5,95,0,0,312,313,5,95,0,0,313,314,5,115,0,0,314,315,5,116,
		0,0,315,316,5,100,0,0,316,317,5,99,0,0,317,318,5,97,0,0,318,319,5,108,
		0,0,319,320,5,108,0,0,320,50,1,0,0,0,321,322,5,115,0,0,322,323,5,116,0,
		0,323,324,5,114,0,0,324,325,5,117,0,0,325,326,5,99,0,0,326,327,5,116,0,
		0,327,52,1,0,0,0,328,329,5,95,0,0,329,330,5,95,0,0,330,331,5,116,0,0,331,
		332,5,104,0,0,332,333,5,105,0,0,333,334,5,115,0,0,334,335,5,99,0,0,335,
		336,5,97,0,0,336,337,5,108,0,0,337,338,5,108,0,0,338,54,1,0,0,0,339,340,
		5,117,0,0,340,341,5,110,0,0,341,342,5,105,0,0,342,343,5,111,0,0,343,344,
		5,110,0,0,344,56,1,0,0,0,345,346,5,117,0,0,346,347,5,110,0,0,347,348,5,
		115,0,0,348,349,5,105,0,0,349,350,5,103,0,0,350,351,5,110,0,0,351,352,
		5,101,0,0,352,353,5,100,0,0,353,58,1,0,0,0,354,355,5,95,0,0,355,356,5,
		95,0,0,356,357,5,118,0,0,357,358,5,101,0,0,358,359,5,99,0,0,359,360,5,
		116,0,0,360,361,5,111,0,0,361,362,5,114,0,0,362,363,5,99,0,0,363,364,5,
		97,0,0,364,365,5,108,0,0,365,366,5,108,0,0,366,60,1,0,0,0,367,368,5,118,
		0,0,368,369,5,105,0,0,369,370,5,114,0,0,370,371,5,116,0,0,371,372,5,117,
		0,0,372,373,5,97,0,0,373,374,5,108,0,0,374,62,1,0,0,0,375,376,5,118,0,
		0,376,377,5,111,0,0,377,378,5,105,0,0,378,379,5,100,0,0,379,64,1,0,0,0,
		380,381,5,40,0,0,381,66,1,0,0,0,382,383,5,41,0,0,383,68,1,0,0,0,384,385,
		5,60,0,0,385,70,1,0,0,0,386,387,5,62,0,0,387,72,1,0,0,0,388,389,5,61,0,
		0,389,74,1,0,0,0,390,391,5,43,0,0,391,76,1,0,0,0,392,393,5,45,0,0,393,
		78,1,0,0,0,394,395,5,42,0,0,395,80,1,0,0,0,396,397,5,47,0,0,397,82,1,0,
		0,0,398,399,5,37,0,0,399,84,1,0,0,0,400,401,5,38,0,0,401,86,1,0,0,0,402,
		403,5,124,0,0,403,88,1,0,0,0,404,405,5,94,0,0,405,90,1,0,0,0,406,407,5,
		126,0,0,407,92,1,0,0,0,408,409,5,33,0,0,409,94,1,0,0,0,410,411,5,58,0,
		0,411,96,1,0,0,0,412,413,5,44,0,0,413,98,1,0,0,0,414,415,5,96,0,0,415,
		100,1,0,0,0,416,417,5,39,0,0,417,102,1,0,0,0,418,419,5,34,0,0,419,104,
		1,0,0,0,420,421,5,123,0,0,421,106,1,0,0,0,422,423,5,125,0,0,423,108,1,
		0,0,0,424,425,5,91,0,0,425,110,1,0,0,0,426,427,5,93,0,0,427,112,1,0,0,
		0,428,433,3,117,58,0,429,432,3,117,58,0,430,432,3,121,60,0,431,429,1,0,
		0,0,431,430,1,0,0,0,432,435,1,0,0,0,433,431,1,0,0,0,433,434,1,0,0,0,434,
		114,1,0,0,0,435,433,1,0,0,0,436,440,3,123,61,0,437,439,3,121,60,0,438,
		437,1,0,0,0,439,442,1,0,0,0,440,438,1,0,0,0,440,441,1,0,0,0,441,445,1,
		0,0,0,442,440,1,0,0,0,443,445,5,48,0,0,444,436,1,0,0,0,444,443,1,0,0,0,
		445,116,1,0,0,0,446,449,3,119,59,0,447,449,3,125,62,0,448,446,1,0,0,0,
		448,447,1,0,0,0,449,118,1,0,0,0,450,451,7,1,0,0,451,120,1,0,0,0,452,453,
		7,2,0,0,453,122,1,0,0,0,454,455,7,3,0,0,455,124,1,0,0,0,456,457,5,92,0,
		0,457,458,5,117,0,0,458,459,1,0,0,0,459,467,3,127,63,0,460,461,5,92,0,
		0,461,462,5,85,0,0,462,463,1,0,0,0,463,464,3,127,63,0,464,465,3,127,63,
		0,465,467,1,0,0,0,466,456,1,0,0,0,466,460,1,0,0,0,467,126,1,0,0,0,468,
		469,3,129,64,0,469,470,3,129,64,0,470,471,3,129,64,0,471,472,3,129,64,
		0,472,128,1,0,0,0,473,474,7,4,0,0,474,130,1,0,0,0,475,477,7,5,0,0,476,
		475,1,0,0,0,477,478,1,0,0,0,478,476,1,0,0,0,478,479,1,0,0,0,479,480,1,
		0,0,0,480,481,6,65,0,0,481,132,1,0,0,0,482,484,5,13,0,0,483,485,5,10,0,
		0,484,483,1,0,0,0,484,485,1,0,0,0,485,488,1,0,0,0,486,488,5,10,0,0,487,
		482,1,0,0,0,487,486,1,0,0,0,488,489,1,0,0,0,489,490,6,66,0,0,490,134,1,
		0,0,0,11,0,192,431,433,440,444,448,466,478,484,487,1,0,1,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace AssetRipper.Translation.LlvmIR
